{"version":3,"sources":["components/footer/ModalContent.js","components/footer/ModalComp.js"],"names":["ModalContent","handleModalOpen","useContext","ModalContext","console","log","className","onClick","href","target","rel","React","memo","areEqual","prevProps","nextProps","isModalOpen","ModalComp","modalContextValue","modalIsOpen","isOpen","onRequestClose","shouldCloseOnOverlayClick","overlay","Modal","setAppElement"],"mappings":"uLAIA,SAASA,IACP,IACQC,EADkBC,qBAAWC,KAC7BF,gBAGR,OAFAG,QAAQC,IAAI,mBAGV,qCACE,qBAAKC,UAAU,aAAf,SACE,wBACEA,UAAU,uBACVC,QAAS,kBAAMN,GAAgB,IAFjC,iBAQF,mBAAGK,UAAU,aAAb,uCACA,qBAAKA,UAAU,0BAAf,SACE,gCACE,oEAC2C,yCAD3C,4CAEqC,2CAFrC,WAE+D,IAC7D,+FAEK,IALP,OAMM,0CANN,mCAMuD,IACrD,iEAPF,cAOqD,IACnD,8CARF,aAQgC,wDARhC,mFAUO,yCAVP,sCAUyD,qCAVzD,IAWE,uBAXF,6HAa6D,uBAb7D,gFAeoB,6CAfpB,gBAeoD,yCAfpD,iIAiBgE,IAC9D,qCAlBF,QAkBkB,yCAlBlB,uBAkBqD,0BAErD,mBACEE,KAAK,2CACLC,OAAO,SACPC,IAAI,aAHN,kCAzCV,iCAsDeC,UAAMC,KAAKZ,GChD1B,SAASa,EAASC,EAAWC,GAC3B,OAAOD,EAAUE,cAAgBD,EAAUC,YAG7C,SAASC,IACP,IAAMC,EAAoBhB,qBAAWC,KAC7BgB,EAAiCD,EAAjCC,YAAalB,EAAoBiB,EAApBjB,gBAGrB,OAFAG,QAAQC,IAAI,gBAGV,cAAC,IAAD,CACEC,UAAU,aACVc,OAAQD,EACRE,eAAgB,kBAAMpB,GAAgB,IACtCqB,2BAA2B,EAC3BC,SAAS,EALX,SAOE,cAAC,EAAD,MArBN,iCAEAC,IAAMC,cAAc,SAwBLd,cAAMC,KAAKK,EAAWJ","file":"static/js/7.e3a1242e.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { ModalContext } from \"./Footer\";\r\nimport(\"./css/modalContent.css\");\r\n\r\nfunction ModalContent() {\r\n  const modalContextValue = useContext(ModalContext);\r\n  const { handleModalOpen } = modalContextValue;\r\n  console.log(\"ModalContent Fn\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"btn-close2\">\r\n        <button\r\n          className=\"btn close-btn btn-sm\"\r\n          onClick={() => handleModalOpen(false)}\r\n        >\r\n          X\r\n        </button>\r\n      </div>\r\n\r\n      <p className=\"title-code\">Webdeveloping information</p>\r\n      <div className=\"dialog-question dev-box\">\r\n        <div>\r\n          <p>\r\n            &nbsp;&nbsp;&nbsp;This page was built in <b>REACT.JS</b> with\r\n            functional components supported by <b>HOOK tools</b> such as{\" \"}\r\n            <b>\r\n              useReducer, useState, useContext, useRef, useCallback, useMemo\r\n            </b>{\" \"}\r\n            and <b>useEffect</b>. Other React libraries embrace:{\" \"}\r\n            <b>createContext, memo, react-modal</b> as well as{\" \"}\r\n            <b>a custom hook</b>, called \"<b>useDrawWithSetRepeating</b>\"\" to\r\n            draw a random order of a given photo array. The page layout is built\r\n            with <b>CSS GRID</b>, while stylesheets are written in <b>SCSS</b>.\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;Images in the cards are loaded dynamically with no\r\n            need of separate components to each different photo topic. <br />\r\n            &nbsp;&nbsp;&nbsp;All react components have been optimized using\r\n            functions such as <b>React.memo()</b> along with '<b>areEqual</b>'\r\n            function (as a second parameter of React.memo()) that compares\r\n            previous and next values of a component's 'props', as well as{\" \"}\r\n            <b>lazy</b> and <b>Suspense</b> React's libraries. <br />\r\n          </p>\r\n          <a\r\n            href=\"https://github.com/kodencja/cards-memory\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            See the code\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(ModalContent);\r\n","import React, { useContext } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { ModalContext } from \"./Footer\";\r\nimport ModalContent from \"./ModalContent\";\r\nimport(\"./css/modalComp.css\");\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return prevProps.isModalOpen === nextProps.isModalOpen;\r\n}\r\n\r\nfunction ModalComp() {\r\n  const modalContextValue = useContext(ModalContext);\r\n  const { modalIsOpen, handleModalOpen } = modalContextValue;\r\n  console.log(\"ModalComp Fn\");\r\n\r\n  return (\r\n    <Modal\r\n      className=\"dialog-box\"\r\n      isOpen={modalIsOpen}\r\n      onRequestClose={() => handleModalOpen(false)}\r\n      shouldCloseOnOverlayClick={true}\r\n      overlay={true}\r\n    >\r\n      <ModalContent />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default React.memo(ModalComp, areEqual);\r\n"],"sourceRoot":""}